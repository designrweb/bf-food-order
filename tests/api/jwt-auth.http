### Authorization request
POST {{url}}/login
Content-Type: application/x-www-form-urlencoded
Accept: application/json

email={{email}}&password={{password}}

> {%
client.test('Authorization', function() {
  client.assert(response.body.hasOwnProperty('access_token'), "Authorization failed. Response: "+JSON.stringify
  (response.body))
})

client.global.set('access_token', response.body.access_token)
%}


### Request user data (me)
POST {{url}}/me
Authorization: Bearer {{access_token}}
Accept: application/json

> {%
client.test('Request user data (me)', function() {
  client.assert(response.body.hasOwnProperty('id'), "User object is not received")
})
%}

#### Refresh token
POST {{url}}/refresh
Authorization: Bearer {{access_token}}
Accept: application/json

> {%
client.test('Refresh access token', function() {
  client.assert(response.body.hasOwnProperty('access_token'), "Refresh failed")
})

client.global.set('access_token', response.body.access_token)
%}

#### Logout action
POST {{url}}/logout
Authorization: Bearer {{access_token}}
Accept: application/json

> {%
client.log(JSON.stringify(response.status));
client.test('Logout request', function() {
  client.assert(response.status === 200, "Logout failed")
})

client.global.clear('access_token')
%}


